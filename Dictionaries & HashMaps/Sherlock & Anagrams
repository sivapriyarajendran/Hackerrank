#include <bits/stdc++.h>

using namespace std;

#define MAX_CHAR 26 
  
// Utility method to return integer index 
// of character 'c' 
int toNum(char c) 
{ 
    return (c - 'a'); 
} 
// Complete the sherlockAndAnagrams function below.
int sherlockAndAnagrams(string str) {
    int N = str.length(); 
    map<vector<int>, int> mp; 
    for (int i=0; i<N; i++) 
    { 
        vector<int> freq(MAX_CHAR, 0); 
        for (int j=i; j<N; j++) 
        { 
            freq[toNum(str[j])]++; 
            mp[freq]++; 
        } 
    } 
    int result = 0; 
    for (auto it=mp.begin(); it!=mp.end(); it++) 
    { 
        int freq = it->second; 
        result += ((freq) * (freq-1))/2; 
    } 
    return result; 

}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int q;
    cin >> q;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    for (int q_itr = 0; q_itr < q; q_itr++) {
        string s;
        getline(cin, s);

        int result = sherlockAndAnagrams(s);

        fout << result << "\n";
    }

    fout.close();

    return 0;
}
